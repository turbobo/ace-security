<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.wxiaoqi.security.modules.admin.mapper.SongMapper">
  <resultMap id="BaseResultMap" type="com.github.wxiaoqi.security.modules.auth.entity.Song">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="song" jdbcType="INTEGER" property="song" />
    <result column="play_count" jdbcType="INTEGER" property="playCount" />
    <result column="track_id" jdbcType="VARCHAR" property="trackId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="release" jdbcType="VARCHAR" property="release" />
    <result column="artitst_id" jdbcType="VARCHAR" property="artitstId" />
    <result column="artist_name" jdbcType="VARCHAR" property="artistName" />
    <result column="artist_hottness" jdbcType="REAL" property="artistHottness" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="duration" jdbcType="REAL" property="duration" />
    <result column="status" jdbcType="CHAR" property="status" />
  </resultMap>
  <update id="logicDeleteById">
    UPDATE song s
    SET s.status = '0'
    WHERE
      s.id = ${id};
  </update>
  <!--  <sql id="Base_Column_List">
      id, song, play_count, track_id, title, `release`, artitst_id, artist_name, artist_hottness,
      `year`, duration, status
    </sql>-->
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    *
    from song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getSongList" resultType="com.github.wxiaoqi.security.modules.auth.entity.Song">
    select
    *
    from song
    where status = '1'
  </select>

<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from song
    where id = #{id,jdbcType=INTEGER}
  </delete>-->
  <!--插入全部字段-->
  <!--<insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.github.wxiaoqi.security.modules.auth.entity.Song" useGeneratedKeys="true">
    insert into song (song, play_count, track_id, 
      title, `release`, artitst_id, 
      artist_name, artist_hottness, `year`, 
      duration)
    values (#{song,jdbcType=INTEGER}, #{playCount,jdbcType=INTEGER}, #{trackId,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{release,jdbcType=VARCHAR}, #{artitstId,jdbcType=VARCHAR}, 
      #{artistName,jdbcType=VARCHAR}, #{artistHottness,jdbcType=REAL}, #{year,jdbcType=INTEGER}, 
      #{duration,jdbcType=REAL})
  </insert>-->
  <!--判断字段非空插入-->
  <insert id="insertSelectiveMine" keyColumn="id" keyProperty="id" parameterType="com.github.wxiaoqi.security.modules.auth.entity.Song" useGeneratedKeys="true">
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="song != null">
        song,
      </if>
      <if test="playCount != null">
        play_count,
      </if>
      <if test="trackId != null">
        track_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="release != null">
        `release`,
      </if>
      <if test="artitstId != null">
        artitst_id,
      </if>
      <if test="artistName != null">
        artist_name,
      </if>
      <if test="artistHottness != null">
        artist_hottness,
      </if>
      <if test="year != null">
        `year`,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="song != null">
        #{song,jdbcType=INTEGER},
      </if>
      <if test="playCount != null">
        #{playCount,jdbcType=INTEGER},
      </if>
      <if test="trackId != null">
        #{trackId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="release != null">
        #{release,jdbcType=VARCHAR},
      </if>
      <if test="artitstId != null">
        #{artitstId,jdbcType=VARCHAR},
      </if>
      <if test="artistName != null">
        #{artistName,jdbcType=VARCHAR},
      </if>
      <if test="artistHottness != null">
        #{artistHottness,jdbcType=REAL},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=REAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="status == null">
        '1',
      </if>
    </trim>
  </insert>

  <update id="updateSelectiveByEntity" parameterType="com.github.wxiaoqi.security.modules.auth.entity.Song">
    update song
    <set>
      <if test="song != null">
        song = #{song,jdbcType=INTEGER},
      </if>
      <if test="playCount != null">
        play_count = #{playCount,jdbcType=INTEGER},
      </if>
      <if test="trackId != null">
        track_id = #{trackId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="release != null">
        `release` = #{release,jdbcType=VARCHAR},
      </if>
      <if test="artitstId != null">
        artitst_id = #{artitstId,jdbcType=VARCHAR},
      </if>
      <if test="artistName != null">
        artist_name = #{artistName,jdbcType=VARCHAR},
      </if>
      <if test="artistHottness != null">
        artist_hottness = #{artistHottness,jdbcType=REAL},
      </if>
      <if test="year != null">
        `year` = #{year,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--<update id="updateByPrimaryKey" parameterType="com.github.wxiaoqi.security.modules.auth.entity.Song">
    update song
    set song = #{song,jdbcType=INTEGER},
      play_count = #{playCount,jdbcType=INTEGER},
      track_id = #{trackId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      `release` = #{release,jdbcType=VARCHAR},
      artitst_id = #{artitstId,jdbcType=VARCHAR},
      artist_name = #{artistName,jdbcType=VARCHAR},
      artist_hottness = #{artistHottness,jdbcType=REAL},
      `year` = #{year,jdbcType=INTEGER},
      duration = #{duration,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>-->
</mapper>